{"version":3,"sources":["../../node_modules/domtastic/src/util.js","../../node_modules/domtastic/src/selector/index.js","../../node_modules/domtastic/src/array.js","../../node_modules/domtastic/src/baseClass.js","../../node_modules/domtastic/src/css.js","../../node_modules/domtastic/src/dom/index.js","../../node_modules/domtastic/src/dom/attr.js","../../node_modules/domtastic/src/dom/class.js","../../node_modules/domtastic/src/dom/contains.js","../../node_modules/domtastic/src/dom/data.js","../../node_modules/domtastic/src/dom/extra.js","../../node_modules/domtastic/src/dom/html.js","../../node_modules/domtastic/src/selector/closest.js","../../node_modules/domtastic/src/event/index.js","../../node_modules/domtastic/src/event/trigger.js","../../node_modules/domtastic/src/event/ready.js","../../node_modules/domtastic/src/noconflict.js","../../node_modules/domtastic/src/selector/extra.js","../../node_modules/domtastic/src/type.js","../../node_modules/domtastic/src/index.js","components/tabs.js","../../node_modules/google-maps/lib/Google.js","components/state/Geocoder.js","components/state/currentLocation.js","components/state/ufByCep.js","components/state/index.js","components/config.js","components/api.js","components/render.js","main.js"],"names":["win","window","toArray","collection","length","result","Array","i","each","callback","thisArg","undefined","nodeType","call","extend","target","sources","forEach","src","prop","uniq","filter","item","index","indexOf","isPrototypeSet","reFragment","reSingleTag","reSimpleSelector","domtastic","selector","context","document","DOMtastic","test","createFragment","querySelector","querySelectorAll","wrap","$","find","nodes","node","child","push","matches","Element","prototype","_matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","isSimpleSelector","getElementById","slice","getElementsByClassName","getElementsByTagName","html","createElement","RegExp","$1","elements","container","children","childNodes","innerHTML","l","fn","constructor","ArrayProto","every","map","pop","reduce","reduceRight","reverse","shift","some","unshift","api","BaseClass","arguments","isNumeric","value","isNaN","parseFloat","isFinite","camelize","replace","letter","toUpperCase","dasherize","toLowerCase","css","key","styleProps","val","style","removeProperty","append","Node","insertAdjacentHTML","appendChild","NodeList","bind","prepend","insertBefore","firstChild","before","parentNode","after","nextSibling","clone","_clone","cloneNode","el","_each","elm","attr","getAttribute","setAttribute","removeAttr","removeAttribute","addClass","split","removeClass","toggleClass","state","action","hasClass","classList","contains","fnName","className","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","isSupportsDataSet","documentElement","DATAKEYPROP","str","match","char","data","appendTo","empty","remove","removeChild","replaceWith","apply","text","textContent","fragment","closest","parentElement","n","on","eventNames","handler","useCapture","once","parts","namespace","eventListener","eventName","proxyHandler","delegateHandler","listener","event","addEventListener","off","handlers","getHandlers","removeEventListener","splice","one","eventKeyProp","id","unusedKeys","clearHandlers","augmentEvent","eventMethods","returnTrue","returnFalse","isDefaultPrevented","stopImmediatePropagation","stopPropagation","methodName","testMethodName","originalMethod","_preventDefault","preventDefault","eventTarget","_target","currentTarget","isPropagationStopped","unbind","reMouseEvent","reKeyEvent","trigger","type","bubbles","cancelable","EventConstructor","getEventConstructor","isEventBubblingInDetachedTree","isAttachedToDocument","isSupportsOtherEventConstructors","MouseEvent","KeyboardEvent","CustomEvent","triggerHandler","ownerDocument","triggerForPath","params","directEventMethods","dispatchEvent","customEvent","createEvent","initCustomEvent","detail","isBubbling","doc","parent","e","ready","readyState","body","previousLib","noConflict","concat","contents","eq","first","get","siblings","sibling","start","end","isFunction","obj","isArray","array","dom","dom_attr","dom_class","dom_contains","dom_data","dom_extra","dom_html","event_trigger","event_ready","noconflict","selector_closest","selector_extra","version","Tabs","listenClick","tab","render","Geocoder","Google","VERSION","Promise","load","maps","resolve","currentLocation","geolocation","getCurrentPosition","coords","latitude","longitude","ufByCep","fetch","url","then","o","json","cep","getUfCode","REGEXP_CEP","geocoder","geocode","location","formatted_address","uf","STATE","ELECTION","getPhoto","makeAPIUrl","getList","response","candidateDiv","candidate","renderCandidates","res","candidatos","unidadeEleitoral","sigla","renderized","descricaoSituacao","numero","nomeUrna","partido","nomeColigacao","fotoUrl","tabs"],"mappings":"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","file":"main.map","sourceRoot":"../../../src/js","sourcesContent":["/*\n * @module Util\n */\n\n/*\n * Reference to the window object\n * @private\n */\n\nexport const win = typeof window !== 'undefined' ? window : {};\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nexport const toArray = collection => {\n  const length = collection.length;\n  const result = new Array(length);\n  for(let i = 0; i < length; i++) {\n    result[i] = collection[i];\n  }\n  return result;\n};\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const each = (collection, callback, thisArg) => {\n  const length = collection.length;\n  if(length !== undefined && collection.nodeType === undefined) {\n    for(let i = 0; i < length; i++) {\n      callback.call(thisArg, collection[i], i, collection);\n    }\n  } else {\n    callback.call(thisArg, collection, 0, collection);\n  }\n  return collection;\n};\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2}); // {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3}); // {a: 3, b: 2}\n */\n\nexport const extend = (target, ...sources) => {\n  sources.forEach(src => {\n    for(let prop in src) {\n      target[prop] = src[prop];\n    }\n  });\n  return target;\n};\n\n/**\n * Return the collection without duplicates\n *\n * @param collection Collection to remove duplicates from\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const uniq = collection => collection.filter((item, index) => collection.indexOf(item) === index);\n","/**\n * @module Selector\n */\n\nimport { win, each } from '../util';\n\nlet isPrototypeSet = false;\n\nconst reFragment = /^\\s*<(\\w+|!)[^>]*>/;\nconst reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nconst reSimpleSelector = /^[.#]?[\\w-]*$/;\n\n/*\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nconst domtastic = function domtastic(selector, context = document) {\n\n  let collection;\n\n  if(!selector) {\n\n    collection = document.querySelectorAll(null);\n\n  } else if(selector instanceof DOMtastic) {\n\n    return selector;\n\n  } else if(typeof selector !== 'string') {\n\n    collection = selector.nodeType || selector === window ? [selector] : selector;\n\n  } else if(reFragment.test(selector)) {\n\n    collection = createFragment(selector);\n\n  } else {\n\n    context = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\n    collection = querySelector(selector, context);\n\n  }\n\n  return wrap(collection);\n\n};\n\nexport const $ = domtastic;\n\n/*\n * Find descendants matching the provided `selector` for each element in the collection.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nexport const find = function(selector) {\n  const nodes = [];\n  each(this, node => each(querySelector(selector, node), child => {\n    if(nodes.indexOf(child) === -1) {\n      nodes.push(child);\n    }\n  }));\n  return $(nodes);\n};\n\n/*\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nexport const matches = (() => {\n  const context = typeof Element !== 'undefined' ? Element.prototype : win;\n  const _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.msMatchesSelector || context.oMatchesSelector || context.webkitMatchesSelector;\n  return (element, selector) => _matches.call(element, selector);\n})();\n\n/*\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nconst querySelector = (selector, context) => {\n\n  const isSimpleSelector = reSimpleSelector.test(selector);\n\n  if(isSimpleSelector) {\n    if(selector[0] === '#') {\n      const element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n      return element ? [element] : [];\n    }\n    if(selector[0] === '.') {\n      return context.getElementsByClassName(selector.slice(1));\n    }\n    return context.getElementsByTagName(selector);\n  }\n\n  return context.querySelectorAll(selector);\n\n};\n\n/*\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nconst createFragment = html => {\n\n  if(reSingleTag.test(html)) {\n    return [document.createElement(RegExp.$1)];\n  }\n\n  const elements = [];\n  const container = document.createElement('div');\n  const children = container.childNodes;\n\n  container.innerHTML = html;\n\n  for(let i = 0, l = children.length; i < l; i++) {\n    elements.push(children[i]);\n  }\n\n  return elements;\n};\n\n/*\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return Object) The wrapped collection\n */\n\nconst wrap = collection => {\n\n  if(!isPrototypeSet) {\n    DOMtastic.prototype = $.fn;\n    DOMtastic.prototype.constructor = DOMtastic;\n    isPrototypeSet = true;\n  }\n\n  return new DOMtastic(collection);\n};\n\n/*\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nexport const DOMtastic = function DOMtastic(collection) {\n  let i = 0;\n  const length = collection.length;\n  for(; i < length;) {\n    this[i] = collection[i++];\n  }\n  this.length = length;\n};\n","/**\n * @module Array\n */\n\nimport { each as _each, toArray } from './util';\nimport { $, matches } from './selector/index';\n\nconst ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     // Test whether every element in the collection has the \"active\" attribute\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const filter = function(selector, thisArg) {\n  const callback = typeof selector === 'function' ? selector : element => matches(element, selector);\n  return $(ArrayProto.filter.call(this, callback, thisArg));\n};\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nexport const forEach = function(callback, thisArg) {\n  return _each(this, callback, thisArg);\n};\n\nexport const each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element); // 2\n */\n\nexport const indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     // Create a new array with the attribute value of each element:\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n */\n\nexport const map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nexport const pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nexport const push = ArrayProto.push;\n\n/**\n * Apply a function against each element in the collection, and this accumulator function has to reduce it\n * to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Calculate the combined height of elements:\n *     $('.items').reduce(function(previousValue, element, index, collection) {\n *         return previousValue + element.clientHeight;\n *     }, 0);\n */\n\nexport const reduce = ArrayProto.reduce;\n\n/**\n * Apply a function against each element in the collection (from right-to-left), and this accumulator function has\n * to reduce it to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Concatenate the text of elements in reversed order:\n *     $('.items').reduceRight(function(previousValue, element, index, collection) {\n *         return previousValue + element.textContent;\n *     }, '');\n */\n\nexport const reduceRight = ArrayProto.reduceRight;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nexport const reverse = function() {\n  return $(toArray(this).reverse());\n};\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nexport const shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     }); // true/false\n */\n\nexport const some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nexport const unshift = ArrayProto.unshift;\n","/**\n * @module BaseClass\n */\n\nimport { $ as selector, DOMtastic } from './selector/index';\nimport { extend } from './util';\n\nexport default function(api) {\n\n  /**\n   * Provide subclass for classes or components to extend from.\n   * The opposite and successor of plugins (no need to extend `$.fn` anymore, complete control).\n   *\n   * @return {Class} The class to extend from, including all `$.fn` methods.\n   * @example\n   *     import { BaseClass } from  'domtastic';\n   *\n   *     class MyComponent extends BaseClass {\n   *         doSomething() {\n   *             return this.addClass('.foo');\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent('body');\n   *     component.doSomething();\n   *\n   * @example\n   *     import $ from  'domtastic';\n   *\n   *     class MyComponent extends $.BaseClass {\n   *         progress(value) {\n   *             return this.attr('data-progress', value);\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent(document.body);\n   *     component.progress('ive').append('<p>enhancement</p>');\n   */\n\n  class BaseClass {\n    constructor() {\n      DOMtastic.call(this, selector(...arguments));\n    }\n  }\n  extend(BaseClass.prototype, api);\n  return BaseClass;\n}\n","/**\n * @module CSS\n */\n\nimport { each } from './util';\n\nconst isNumeric = value => !isNaN(parseFloat(value)) && isFinite(value);\n\nconst camelize = value => value.replace(/-([\\da-z])/gi, (matches, letter) => letter.toUpperCase());\n\nconst dasherize = value => value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width': '1px', display: 'inline-block'}); // set multiple\n */\n\nexport const css = function(key, value) {\n\n  let styleProps, prop, val;\n\n  if(typeof key === 'string') {\n    key = camelize(key);\n\n    if(typeof value === 'undefined') {\n      let element = this.nodeType ? this : this[0];\n      if(element) {\n        val = element.style[key];\n        return isNumeric(val) ? parseFloat(val) : val;\n      }\n      return undefined;\n    }\n\n    styleProps = {};\n    styleProps[key] = value;\n  } else {\n    styleProps = key;\n    for(prop in styleProps) {\n      val = styleProps[prop];\n      delete styleProps[prop];\n      styleProps[camelize(prop)] = val;\n    }\n  }\n\n  each(this, element => {\n    for(prop in styleProps) {\n      if(styleProps[prop] || styleProps[prop] === 0) {\n        element.style[prop] = styleProps[prop];\n      } else {\n        element.style.removeProperty(dasherize(prop));\n      }\n    }\n  });\n\n  return this;\n};\n","/**\n * @module DOM\n */\n\nimport { toArray } from '../util';\nimport { $ } from '../selector/index';\n\nconst forEach = Array.prototype.forEach;\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nexport const append = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforeend', element);\n    } else {\n      if(element instanceof Node) {\n        this.appendChild(element);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, this.appendChild.bind(this));\n      }\n    }\n  } else {\n    _each(this, append, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nexport const prepend = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterbegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.insertBefore(element, this.firstChild);\n      } else {\n        let elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), prepend.bind(this));\n      }\n    }\n  } else {\n    _each(this, prepend, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nexport const before = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforebegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, before.bind(this));\n      }\n    }\n  } else {\n    _each(this, before, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nexport const after = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterend', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this.nextSibling);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), after.bind(this));\n      }\n    }\n  } else {\n    _each(this, after, element);\n  }\n  return this;\n};\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nexport const clone = function() {\n  return $(_clone(this));\n};\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nexport const _clone = element => {\n  if(typeof element === 'string') {\n    return element;\n  } else if(element instanceof Node) {\n    return element.cloneNode(true);\n  } else if('length' in element) {\n    return [].map.call(element, el => el.cloneNode(true));\n  }\n  return element;\n};\n\n/**\n * Specialized iteration, applying `fn` in reversed manner to a clone of each element, but the provided one.\n *\n * @param {NodeList|Array} collection\n * @param {Function} fn\n * @param {Node} element\n * @private\n */\n\nexport const _each = (collection, fn, element) => {\n  let l = collection.length;\n  while(l--) {\n    const elm = l === 0 ? element : _clone(element);\n    fn.call(collection[l], elm);\n  }\n};\n","/**\n * @module Attr\n */\n\nimport { each } from '../util';\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({attr1: 'value1', 'attr-2': 'value2'}); // set multiple\n */\n\nexport const attr = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.getAttribute(key) : undefined;\n  }\n\n  return each(this, element => {\n    if(typeof key === 'object') {\n      for(let attr in key) {\n        element.setAttribute(attr, key[attr]);\n      }\n    } else {\n      element.setAttribute(key, value);\n    }\n  });\n};\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nexport const removeAttr = function(key) {\n  return each(this, element => element.removeAttribute(key));\n};\n","/**\n * @module Class\n */\n\nimport { each } from '../util';\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nexport const addClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'add'));\n  }\n  return this;\n};\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nexport const removeClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'remove'));\n  }\n  return this;\n};\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @param {Boolean} [state] A Boolean value to determine whether the class should be added or removed.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n *     $('.item').toggleClass('bar', true);\n */\n\nexport const toggleClass = function(value, state) {\n  if(value && value.length) {\n    const action = typeof state === 'boolean' ? state ? 'add' : 'remove' : 'toggle';\n    each(value.split(' '), _each.bind(this, action));\n  }\n  return this;\n};\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nexport const hasClass = function(value) {\n  return (this.nodeType ? [this] : this).some(element => element.classList.contains(value));\n};\n\n/**\n * Specialized iteration, applying `fn` of the classList API to each element.\n *\n * @param {String} fnName\n * @param {String} className\n * @private\n */\n\nconst _each = function(fnName, className) {\n  return each(this, element => element.classList[fnName](className));\n};\n","/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement); // true/false\n */\n\nexport const contains = (container, element) => {\n  if(!container || !element || container === element) {\n    return false;\n  } else if(container.contains) {\n    return container.contains(element);\n  } else if(container.compareDocumentPosition) {\n    return !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n  }\n  return false;\n};\n","/**\n * @module Data\n */\n\nimport { each } from '../util';\n\nconst isSupportsDataSet = typeof document !== 'undefined' && 'dataset' in document.documentElement;\nconst DATAKEYPROP = isSupportsDataSet ? 'dataset' : '__DOMTASTIC_DATA__';\n\nconst camelize = str => str.replace(/-+(.)?/g, (match, char) => char ? char.toUpperCase() : '');\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nexport const data = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && DATAKEYPROP in element ? element[DATAKEYPROP][camelize(key)] : undefined;\n  }\n\n  return each(this, element => {\n    if(!isSupportsDataSet) {\n      element[DATAKEYPROP] = element[DATAKEYPROP] || {};\n    }\n\n    element[DATAKEYPROP][camelize(key)] = value;\n  });\n};\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nexport const prop = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && element ? element[key] : undefined;\n  }\n\n  return each(this, element => element[key] = value);\n};\n","/**\n * @module DOM (extra)\n */\n\nimport { each } from '../util';\nimport { append, before } from './index';\nimport { $ } from '../selector/index';\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nexport const appendTo = function(element) {\n  const context = typeof element === 'string' ? $(element) : element;\n  append.call(context, this);\n  return this;\n};\n\n/*\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nexport const empty = function() {\n  return each(this, element => element.innerHTML = '');\n};\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nexport const remove = function() {\n  return each(this, element => {\n    if(element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n};\n\n/**\n * Replace each element in the collection with the provided new content, and return the array of elements that were replaced.\n *\n * @return {Array} Array containing the replaced elements\n */\n\nexport const replaceWith = function() {\n  return before.apply(this, arguments).remove();\n};\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nexport const text = function(value) {\n\n  if(value === undefined) {\n    return this[0].textContent;\n  }\n\n  return each(this, element => element.textContent = '' + value);\n};\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').val('New value');\n */\n\nexport const val = function(value) {\n\n  if(value === undefined) {\n    return this.length > 0 ? this[0].value : undefined;\n  }\n\n  return each(this, element => element.value = value);\n};\n","/**\n * @module HTML\n */\n\nimport { each } from '../util';\n\n/*\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nexport const html = function(fragment) {\n\n  if(fragment === undefined) {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.innerHTML : undefined;\n  }\n\n  return each(this, element => element.innerHTML = fragment);\n};\n","/**\n * @module closest\n */\n\nimport { $, matches } from './index';\nimport { each, uniq } from '../util';\n\n/**\n * Return the closest element matching the selector (starting by itself) for each element in the collection.\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nexport const closest = (() => {\n\n  const closest = function(selector, context) {\n    const nodes = [];\n    each(this, node => {\n      while(node && node !== context) {\n        if(matches(node, selector)) {\n          nodes.push(node);\n          break;\n        }\n        node = node.parentElement;\n      }\n    });\n    return $(uniq(nodes));\n  };\n\n  return typeof Element === 'undefined' || !Element.prototype.closest ? closest : function(selector, context) {\n    if(!context) {\n      const nodes = [];\n      each(this, node => {\n        const n = node.closest(selector);\n        if(n) {\n          nodes.push(n);\n        }\n      });\n      return $(uniq(nodes));\n    } else {\n      return closest.call(this, selector, context);\n    }\n  };\n})();\n","/**\n * @module Events\n */\n\nimport { each } from '../util';\nimport { closest } from '../selector/closest';\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @param {Boolean} once=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nexport const on = function(eventNames, selector, handler, useCapture, once) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    eventListener;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    eventListener = proxyHandler(handler);\n\n    each(this, element => {\n\n      if(selector) {\n        eventListener = delegateHandler.bind(element, selector, eventListener);\n      }\n\n      if(once) {\n        const listener = eventListener;\n        eventListener = event => {\n          off.call(element, eventNames, selector, handler, useCapture);\n          listener.call(element, event);\n        };\n      }\n\n      element.addEventListener(eventName, eventListener, useCapture || false);\n\n      getHandlers(element).push({\n        eventName,\n        handler,\n        eventListener,\n        selector,\n        namespace\n      });\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Shorthand for `removeEventListener`.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nexport const off = function(eventNames = '', selector, handler, useCapture) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    handlers;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    return each(this, element => {\n\n      handlers = getHandlers(element);\n\n      each(handlers.filter(item => {\n        return (\n          (!eventName || item.eventName === eventName) &&\n          (!namespace || item.namespace === namespace) &&\n          (!handler || item.handler === handler) &&\n          (!selector || item.selector === selector)\n        );\n      }), item => {\n        element.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n        handlers.splice(handlers.indexOf(item), 1);\n      });\n\n      if(!eventName && !namespace && !selector && !handler) {\n        clearHandlers(element);\n      } else if(handlers.length === 0) {\n        clearHandlers(element);\n      }\n\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Add event listener and execute the handler at most once per element.\n *\n * @param eventNames\n * @param selector\n * @param handler\n * @param useCapture\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').one('click', callback);\n */\n\nexport const one = function(eventNames, selector, handler, useCapture) {\n  return on.call(this, eventNames, selector, handler, useCapture, 1);\n};\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nconst eventKeyProp = '__domtastic_event__';\nlet id = 1;\nlet handlers = {};\nlet unusedKeys = [];\n\nexport const getHandlers = element => {\n  if(!element[eventKeyProp]) {\n    element[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n  }\n  const key = element[eventKeyProp];\n  return handlers[key] || (handlers[key] = []);\n};\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nexport const clearHandlers = element => {\n  const key = element[eventKeyProp];\n  if(handlers[key]) {\n    handlers[key] = null;\n    element[eventKeyProp] = null;\n    unusedKeys.push(key);\n  }\n};\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nexport const proxyHandler = handler => function(event) {\n  return handler.call(this, augmentEvent(event));\n};\n\nconst eventMethods = {\n  preventDefault: 'isDefaultPrevented',\n  stopImmediatePropagation: 'isImmediatePropagationStopped',\n  stopPropagation: 'isPropagationStopped'\n};\nconst returnTrue = () => true;\nconst returnFalse = () => false;\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nconst augmentEvent = event => {\n  if(!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n    for(const methodName in eventMethods) {\n      (function(methodName, testMethodName, originalMethod) {\n        event[methodName] = function() {\n          this[testMethodName] = returnTrue;\n          return originalMethod && originalMethod.apply(this, arguments);\n        };\n        event[testMethodName] = returnFalse;\n      }(methodName, eventMethods[methodName], event[methodName]));\n    }\n    if(event._preventDefault) {\n      event.preventDefault();\n    }\n  }\n  return event;\n};\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nexport const delegateHandler = function(selector, handler, event) {\n  const eventTarget = event._target || event.target;\n  const currentTarget = closest.call([eventTarget], selector, this)[0];\n  if(currentTarget && currentTarget !== this) {\n    if(currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n      handler.call(currentTarget, event);\n    }\n  }\n};\n\nexport const bind = on;\nexport const unbind = off;\n","/**\n * @module trigger\n */\n\nimport { win, each } from '../util';\nimport { contains } from '../dom/contains';\n\nconst reMouseEvent = /^(mouse(down|up|over|out|enter|leave|move)|contextmenu|(dbl)?click)$/;\nconst reKeyEvent = /^key(down|press|up)$/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nexport const trigger = function(type, data, {bubbles = true, cancelable = true, preventDefault = false} = {}) {\n\n  const EventConstructor = getEventConstructor(type);\n  const event = new EventConstructor(type, {\n    bubbles,\n    cancelable,\n    preventDefault,\n    detail: data\n  });\n\n  event._preventDefault = preventDefault;\n\n  return each(this, element => {\n    if(!bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n      dispatchEvent(element, event);\n    } else {\n      triggerForPath(element, type, {\n        bubbles,\n        cancelable,\n        preventDefault,\n        detail: data\n      });\n    }\n  });\n};\n\nconst getEventConstructor = type => isSupportsOtherEventConstructors ? (reMouseEvent.test(type) ? MouseEvent : (reKeyEvent.test(type) ? KeyboardEvent : CustomEvent)) : CustomEvent;\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nexport const triggerHandler = function(type, data) {\n  if(this[0]) {\n    trigger.call(this[0], type, data, {\n      bubbles: false,\n      preventDefault: true\n    });\n  }\n};\n\n/**\n * Check whether the element is attached to or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nconst isAttachedToDocument = element => {\n  if(element === window || element === document) {\n    return true;\n  }\n  return contains(element.ownerDocument.documentElement, element);\n};\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nconst triggerForPath = (element, type, params = {}) => {\n  params.bubbles = false;\n  const event = new CustomEvent(type, params);\n  event._target = element;\n  do {\n    dispatchEvent(element, event);\n  } while(element = element.parentNode); // eslint-disable-line no-cond-assign\n};\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nconst directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nconst dispatchEvent = (element, event) => {\n  if(directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n    element[event.type]();\n  } else {\n    element.dispatchEvent(event);\n  }\n};\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(() => {\n  const CustomEvent = function(event, params = {\n    bubbles: false,\n    cancelable: false,\n    detail: undefined\n  }) {\n    let customEvent = document.createEvent('CustomEvent');\n    customEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return customEvent;\n  };\n\n  CustomEvent.prototype = win.CustomEvent && win.CustomEvent.prototype;\n  win.CustomEvent = CustomEvent;\n\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nconst isEventBubblingInDetachedTree = (() =>{\n  let isBubbling = false;\n  const doc = win.document;\n  if(doc) {\n    const parent = doc.createElement('div');\n    const child = parent.cloneNode();\n    parent.appendChild(child);\n    parent.addEventListener('e', function() {\n      isBubbling = true;\n    });\n    child.dispatchEvent(new CustomEvent('e', {bubbles: true}));\n  }\n  return isBubbling;\n})();\n\nconst isSupportsOtherEventConstructors = (() => {\n  try {\n    new MouseEvent('click');\n  } catch(e) {\n    return false;\n  }\n  return true;\n})();\n","/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nexport const ready = function(handler) {\n  if(/complete|loaded|interactive/.test(document.readyState) && document.body) {\n    handler();\n  } else {\n    document.addEventListener('DOMContentLoaded', handler, false);\n  }\n  return this;\n};\n","/**\n * @module noConflict\n */\n\nimport { win } from './util';\n\n/*\n * Save the previous value of the global `$` variable, so that it can be restored later on.\n * @private\n */\n\nconst previousLib = win.$;\n\n/**\n * In case another library sets the global `$` variable before DOMtastic does,\n * this method can be used to return the global `$` to that other library.\n *\n * @return {Object} Reference to DOMtastic.\n * @example\n *     var domtastic = $.noConflict();\n */\n\nexport const noConflict = function() {\n  win.$ = previousLib;\n  return this;\n};\n","/**\n * @module Selector (extra)\n */\n\nimport { each, toArray } from '../util';\nimport { $, matches } from './index';\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nexport const children = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(element.children) {\n      each(element.children, child => {\n        if(!selector || (selector && matches(child, selector))) {\n          nodes.push(child);\n        }\n      });\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Add the elements of a wrapped collection to another.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The extended wrapped collection\n * @example\n *     $('.items').concat($('.more-items));\n *     $('.items').concat('.more-items);\n *     $('.items').concat('<div>more</div>');\n */\n\nexport const concat = function(selector) {\n  each($(selector), element => {\n    if([].indexOf.call(this, element) === -1) {\n      [].push.call(this, element);\n    }\n  });\n  return this;\n};\n\n/**\n * Return child nodes of each element in the collection, including text and comment nodes.\n *\n * @return {Object} New wrapped collection\n * @example\n *     $('.selector').contents();\n */\n\nexport const contents = function() {\n  const nodes = [];\n  each(this, element => nodes.push.apply(nodes, toArray(element.childNodes)));\n  return $(nodes);\n};\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     // The second item; result is the same as doing $($('.items')[1]);\n */\n\nexport const eq = function(index) {\n  return slice.call(this, index, index + 1);\n};\n\n/**\n * Return a collection containing only the first item.\n *\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').first()\n *     // The first item; result is the same as doing $($('.items')[0]);\n */\n\nexport const first = function() {\n  return slice.call(this, 0, 1);\n};\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     // The second element; result is the same as doing $('.items')[1];\n */\n\nexport const get = function(index) {\n  return this[index];\n};\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nexport const parent = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(!selector || (selector && matches(element.parentNode, selector))) {\n      nodes.push(element.parentNode);\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Return the sibling elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').siblings();\n *     $('.selector').siblings('.filter');\n */\n\nexport const siblings = function(selector) {\n  const nodes = [];\n  each(this, element => each(element.parentNode.children, sibling => {\n    if(sibling !== element && (!selector || (selector && matches(sibling, selector)))) {\n      nodes.push(sibling);\n    }\n  }));\n  return $(nodes);\n};\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     // New wrapped collection containing the second, third, and fourth element.\n */\n\nexport const slice = function(start, end) { // eslint-disable-line no-unused-vars\n  return $([].slice.apply(this, arguments));\n};\n","/**\n * @module Type\n */\n\n/*\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean}\n * @example\n *     $.isFunction(function(){}); // true\n * @example\n *     $.isFunction({}); // false\n */\n\nexport const isFunction = obj => typeof obj === 'function';\n\n/*\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean}\n * @example\n *     $.isArray([]); // true\n * @example\n *     $.isArray({}); // false\n */\n\nexport const isArray = Array.isArray;\n","/**\n * @module API\n */\n\nimport { extend } from './util';\n\nconst api = {};\nlet $ = {};\n\n// Import modules to build up the API\n\nimport * as array from './array';\nimport BaseClass from './baseClass';\nimport * as css from './css';\nimport * as dom from './dom/index';\nimport * as dom_attr from './dom/attr';\nimport * as dom_class from './dom/class';\nimport * as dom_contains from './dom/contains';\nimport * as dom_data from './dom/data';\nimport * as dom_extra from './dom/extra';\nimport * as dom_html from './dom/html';\nimport * as event from './event/index';\nimport * as event_trigger from './event/trigger';\nimport * as event_ready from './event/ready';\nimport * as noconflict from './noconflict';\nimport * as selector from './selector/index';\nimport * as selector_closest from './selector/closest';\nimport * as selector_extra from './selector/extra';\nimport * as type from './type';\n\nif(typeof selector !== 'undefined') {\n  $ = selector.$;\n  $.matches = selector.matches;\n  api.find = selector.find;\n}\n\nextend($, dom_contains, noconflict, type);\nextend(api, array, css, dom_attr, dom, dom_class, dom_data, dom_extra, dom_html, event, event_trigger, event_ready, selector_closest, selector_extra);\n\n$.fn = api;\n\n// Version\n\n$.version = '__VERSION__';\n\n// Util\n\n$.extend = extend;\n\n// Provide base class to extend from\n\nif(typeof BaseClass !== 'undefined') {\n  $.BaseClass = BaseClass($.fn);\n}\n\n// Export interface\n\nexport default $;\n","import $ from 'domtastic'\n\nclass Tabs {\n  constructor (trigger) {\n    this.trigger = trigger\n    this.listenClick(trigger)\n  }\n\n  render () {\n    let context = $(this.trigger)\n    let tabActive = context.find('.tab-list__item.active')\n    let tab = tabActive.data('tab')\n\n    $('.tab-content__item').removeClass('active')\n    context.find(`.tab-content__item[data-tab=\"${tab}\"]`).addClass('active')\n  }\n\n  listenClick () {\n    let changeTab = () => this.render()\n    let tab = $('.tab-list__item')\n\n    tab.on('click', function () {\n      tab.removeClass('active')\n      $(this).addClass('active')\n      changeTab()\n    })\n  }\n}\n\nexport default Tabs\n","(function(root, factory) {\n\n\tif (root === null) {\n\t\tthrow new Error('Google-maps package can be used only in browser');\n\t}\n\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.GoogleMapsLoader = factory();\n\t}\n\n})(typeof window !== 'undefined' ? window : null, function() {\n\n\n\t'use strict';\n\n\n\tvar googleVersion = '3.31';\n\n\tvar script = null;\n\n\tvar google = null;\n\n\tvar loading = false;\n\n\tvar callbacks = [];\n\n\tvar onLoadEvents = [];\n\n\tvar originalCreateLoaderMethod = null;\n\n\n\tvar GoogleMapsLoader = {};\n\n\n\tGoogleMapsLoader.URL = 'https://maps.googleapis.com/maps/api/js';\n\n\tGoogleMapsLoader.KEY = null;\n\n\tGoogleMapsLoader.LIBRARIES = [];\n\n\tGoogleMapsLoader.CLIENT = null;\n\n\tGoogleMapsLoader.CHANNEL = null;\n\n\tGoogleMapsLoader.LANGUAGE = null;\n\n\tGoogleMapsLoader.REGION = null;\n\n\tGoogleMapsLoader.VERSION = googleVersion;\n\n\tGoogleMapsLoader.WINDOW_CALLBACK_NAME = '__google_maps_api_provider_initializator__';\n\n\n\tGoogleMapsLoader._googleMockApiObject = {};\n\n\n\tGoogleMapsLoader.load = function(fn) {\n\t\tif (google === null) {\n\t\t\tif (loading === true) {\n\t\t\t\tif (fn) {\n\t\t\t\t\tcallbacks.push(fn);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloading = true;\n\n\t\t\t\twindow[GoogleMapsLoader.WINDOW_CALLBACK_NAME] = function() {\n\t\t\t\t\tready(fn);\n\t\t\t\t};\n\n\t\t\t\tGoogleMapsLoader.createLoader();\n\t\t\t}\n\t\t} else if (fn) {\n\t\t\tfn(google);\n\t\t}\n\t};\n\n\n\tGoogleMapsLoader.createLoader = function() {\n\t\tscript = document.createElement('script');\n\t\tscript.type = 'text/javascript';\n\t\tscript.src = GoogleMapsLoader.createUrl();\n\n\t\tdocument.body.appendChild(script);\n\t};\n\n\n\tGoogleMapsLoader.isLoaded = function() {\n\t\treturn google !== null;\n\t};\n\n\n\tGoogleMapsLoader.createUrl = function() {\n\t\tvar url = GoogleMapsLoader.URL;\n\n\t\turl += '?callback=' + GoogleMapsLoader.WINDOW_CALLBACK_NAME;\n\n\t\tif (GoogleMapsLoader.KEY) {\n\t\t\turl += '&key=' + GoogleMapsLoader.KEY;\n\t\t}\n\n\t\tif (GoogleMapsLoader.LIBRARIES.length > 0) {\n\t\t\turl += '&libraries=' + GoogleMapsLoader.LIBRARIES.join(',');\n\t\t}\n\n\t\tif (GoogleMapsLoader.CLIENT) {\n\t\t\turl += '&client=' + GoogleMapsLoader.CLIENT;\n\t\t}\n\n\t\tif (GoogleMapsLoader.CHANNEL) {\n\t\t\turl += '&channel=' + GoogleMapsLoader.CHANNEL;\n\t\t}\n\n\t\tif (GoogleMapsLoader.LANGUAGE) {\n\t\t\turl += '&language=' + GoogleMapsLoader.LANGUAGE;\n\t\t}\n\n\t\tif (GoogleMapsLoader.REGION) {\n\t\t\turl += '&region=' + GoogleMapsLoader.REGION;\n\t\t}\n\n\t\tif (GoogleMapsLoader.VERSION) {\n\t\t\turl += '&v=' + GoogleMapsLoader.VERSION;\n\t\t}\n\n\t\treturn url;\n\t};\n\n\n\tGoogleMapsLoader.release = function(fn) {\n\t\tvar release = function() {\n\t\t\tGoogleMapsLoader.KEY = null;\n\t\t\tGoogleMapsLoader.LIBRARIES = [];\n\t\t\tGoogleMapsLoader.CLIENT = null;\n\t\t\tGoogleMapsLoader.CHANNEL = null;\n\t\t\tGoogleMapsLoader.LANGUAGE = null;\n\t\t\tGoogleMapsLoader.REGION = null;\n\t\t\tGoogleMapsLoader.VERSION = googleVersion;\n\n\t\t\tgoogle = null;\n\t\t\tloading = false;\n\t\t\tcallbacks = [];\n\t\t\tonLoadEvents = [];\n\n\t\t\tif (typeof window.google !== 'undefined') {\n\t\t\t\tdelete window.google;\n\t\t\t}\n\n\t\t\tif (typeof window[GoogleMapsLoader.WINDOW_CALLBACK_NAME] !== 'undefined') {\n\t\t\t\tdelete window[GoogleMapsLoader.WINDOW_CALLBACK_NAME];\n\t\t\t}\n\n\t\t\tif (originalCreateLoaderMethod !== null) {\n\t\t\t\tGoogleMapsLoader.createLoader = originalCreateLoaderMethod;\n\t\t\t\toriginalCreateLoaderMethod = null;\n\t\t\t}\n\n\t\t\tif (script !== null) {\n\t\t\t\tscript.parentElement.removeChild(script);\n\t\t\t\tscript = null;\n\t\t\t}\n\n\t\t\tif (fn) {\n\t\t\t\tfn();\n\t\t\t}\n\t\t};\n\n\t\tif (loading) {\n\t\t\tGoogleMapsLoader.load(function() {\n\t\t\t\trelease();\n\t\t\t});\n\t\t} else {\n\t\t\trelease();\n\t\t}\n\t};\n\n\n\tGoogleMapsLoader.onLoad = function(fn) {\n\t\tonLoadEvents.push(fn);\n\t};\n\n\n\tGoogleMapsLoader.makeMock = function() {\n\t\toriginalCreateLoaderMethod = GoogleMapsLoader.createLoader;\n\n\t\tGoogleMapsLoader.createLoader = function() {\n\t\t\twindow.google = GoogleMapsLoader._googleMockApiObject;\n\t\t\twindow[GoogleMapsLoader.WINDOW_CALLBACK_NAME]();\n\t\t};\n\t};\n\n\n\tvar ready = function(fn) {\n\t\tvar i;\n\n\t\tloading = false;\n\n\t\tif (google === null) {\n\t\t\tgoogle = window.google;\n\t\t}\n\n\t\tfor (i = 0; i < onLoadEvents.length; i++) {\n\t\t\tonLoadEvents[i](google);\n\t\t}\n\n\t\tif (fn) {\n\t\t\tfn(google);\n\t\t}\n\n\t\tfor (i = 0; i < callbacks.length; i++) {\n\t\t\tcallbacks[i](google);\n\t\t}\n\n\t\tcallbacks = [];\n\t};\n\n\n\treturn GoogleMapsLoader;\n\n});\n","import Google from 'google-maps'\n\nGoogle.VERSION = 'weekly'\n\nconst Geocoder = () =>\n  new Promise(resolve => Google.load(({ maps }) => resolve(new maps.Geocoder())))\n\nexport default Geocoder\n","const currentLocation = () => {\n  return new Promise((resolve) => {\n    navigator.geolocation.getCurrentPosition(({ coords }) => {\n      return resolve({\n        lat: parseFloat(coords.latitude),\n        lng: parseFloat(coords.longitude)\n      })\n    })\n  })\n}\n\nexport default currentLocation\n","\nconst get = url => window.fetch(url).then(o => o.json())\n\nconst ufByCep = cep => get(`https://viacep.com.br/ws/${cep}/json/`)\n\nexport default ufByCep\n","import Geocoder from './Geocoder'\nimport currentLocation from './currentLocation'\nimport ufByCep from './ufByCep'\n\nconst REGEXP_CEP = /[0-9]{5}-[0-9]{3}/\n\nconst getUfCode = () =>\n  new Promise((resolve) => {\n    Geocoder().then((geocoder) => {\n      currentLocation().then((coords) => {\n        geocoder.geocode(\n          { location: coords },\n          data => ufByCep(data[0].formatted_address.match(REGEXP_CEP)[0])\n            .then(({ uf }) => resolve(uf))\n        )\n      })\n    })\n  })\n\nexport default getUfCode\n","import STATE from './state'\n\nconst ELECTION = '2022802018'\n\nexport { ELECTION, STATE }\n","import { ELECTION, STATE } from './config'\n\nconst makeAPIUrl = (state, type) => {\n  return `http://divulgacandcontas.tse.jus.br/divulga/rest/v1/candidatura/listar/2018/${state}/${ELECTION}/${type}/candidatos`\n}\n\nconst getList = type =>\n  STATE().then((state) => {\n    let api = ''\n\n    switch (type) {\n      case 'presidente':\n        api = makeAPIUrl('BR', '1')\n        break\n      case 'governador':\n        api = makeAPIUrl(state, '3')\n        break\n      case 'senador':\n        api = makeAPIUrl(state, '5')\n        break\n      case 'federal':\n        api = makeAPIUrl(state, '6')\n        break\n      case 'estadual':\n        api = makeAPIUrl(state, '7')\n        break\n    }\n    return fetch(api).then(response => response.json()) // eslint-disable-line\n  })\n\nconst getPhoto = (id, state) => {\n  return fetch(`http://divulgacandcontas.tse.jus.br/divulga/rest/v1/candidatura/buscar/2018/${state}/${ELECTION}/candidato/${id}`).then(response => response.json()) // eslint-disable-line\n}\n\nexport { getList, getPhoto }\n","import $ from 'domtastic'\nimport { getList, getPhoto } from './api'\n\nexport default function render () {\n  let candidates = $('[data-candidate]')\n\n  candidates.each(item => {\n    let candidateDiv = $(item)\n    let candidate = candidateDiv.data('candidate')\n\n    candidateDiv.html('<img class=\"loading\" src=\"assets/img/loading.gif\" />')\n\n    getList(candidate).then(res => {\n      candidateDiv.html(renderCandidates(res.candidatos, res.unidadeEleitoral.sigla))\n    })\n  })\n}\n\nconst renderCandidates = (data, state) => {\n  let renderized = ''\n\n  data.map(item => {\n    if (item.descricaoSituacao === 'Deferido') {\n      renderized += `\n        <div class=\"candidate-item\">\n          <div class=\"candidate-item-column__photo\">\n            <img class=\"candidate-item__photo\" data-photo-candidate=\"${item.id}\" />\n          </div>\n          <div class=\"candidate-item-column__content\">\n            <span class=\"candidate-item__number\">${item.numero}</span>\n            <h3 class=\"candidate-item__name\">${item.nomeUrna} <span</h3>\n            <p class=\"candidate-item__coalition\">${item.partido.sigla} • ${item.nomeColigacao}</p>\n          </div>\n        </div>\n      `\n    }\n\n    getPhoto(item.id, state)\n      .then(res => {\n        $(`[data-photo-candidate=\"${res.id}\"]`).attr('src', res.fotoUrl)\n      })\n  })\n\n  return renderized\n}\n","import Tabs from './components/tabs'\nimport Render from './components/render'\n\nconst tabs = new Tabs('.tabs')\ntabs.render()\n\nRender()\n"]}